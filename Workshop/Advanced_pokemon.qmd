---
title: "Pokemon analysis"
author: "Your Name"
format: html
editor: visual
---

![](https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/International_Pok%25C3%25A9mon_logo.svg/1200px-International_Pok%25C3%25A9mon_logo.svg.png){fig-align="center"}

# Introduction

In this short hackathon you will analyse a Pokemon dataset. First, you will perform an exploratory analysis to get to know your data. Afterwards, you will develop a random forest model to predict the Pokemon type based on their characteristics.

# Project setup

Load libraries and import the Pokemon dataset. There is a nice defined color palette to color various Pokemon types. Include it in your visualizations.

```{r}
# load libraries you will work with

# import data and save it in pokemon variable
pokemon
# make custom pokemon color palette
poke_palette <- c(	normal= '#A8A77A',	fire= '#EE8130',	water= '#6390F0',
              electric= '#F7D02C',	grass= '#7AC74C', 	ice= '#96D9D6',	
              fighting= '#C22E28',	poison= '#A33EA1',	ground= '#E2BF65',	
              flying= '#A98FF3',	psychic= '#F95587',	bug= '#A6B91A',
              rock= '#B6A136',	ghost= '#735797',	dragon= '#6F35FC',
              dark= '#705746',	steel= '#B7B7CE',	fairy= '#D685AD')
```

# Exploratory analysis

Perform an exploratory analysis of the dataset. Answer the following questions:

1.  How many Pokemon are in your dataset? How many of each type and generation?

2.  How many numerical and how many categorical features you have in your data? Are all the numerical features continuous features? Explain.

3.  Visualize the distribution of Pokemon's statuses (attack ,defense, sp_attack, sp_defense, speed, weight_kg, hp and height_m) by type1 of Pokemon? What can you conclude?

4.  How correlated are the Pokemon's statuses? Which status features are highly correlated?

5.  Against which type1 Pokemon are ice types the strongest?

6.  Are legendary Pokemon heavier than non-legendary ones?

7.  What type1 is most common for Mouse type Pokemon?

8.  Perform any additional analysis you find most interesting about your favorite type or classification of Pokemon. Go wild!

# Predicting Pokemon type

## Cleaning data

We want to develop a machine learning model to predict the Pokemon type based on their statuses. Select only the "type1", "attack" ,"defense", "sp_attack", "sp_defense", "speed" "weight_kg", "hp" and "height_m" columns from the table. Remove any NAs present in the data. Convert the type1 column to factor type.

The first step in developing a model is to split the data into training and test set. Training set usually contains about 70-80 percent of data while test set contains 30-20 percent of the data. One of the most used R packages for statistical modeling is ***caret***. Install the package if you already do not have it.

1.  Search how to split the data into training and test set then do it.

After you have split your data, you will develop a model using only test set and asses the performance of the model on the test set. Explain why is this approach necessary for model development?

Your answer: \_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_.

2.  Examine which types of Pokemon are present in train and test sets? Do you see an class imbalance?

## Random forest

For the development of the model you will use random forest. Caret package within function train has implemented random forest as a part of another package called ***ranger***. Ranger contains much faster implementation of random forest model that is why we are going to use this one.

1.  We will use random forest with 5 fold cross-validation approach which you need to define with function trainControl. Inside function *train* from caret package set the method argument to *ranger*, number of trees to 100.

2.  Use function varImp to determine which variables are most important for your model.

3.  How well does your model perform when you test in on the test Pokemon dataset?

# Conclusion

What did you learn from this short hackathon? Do you have any ideas how to improve the model?
